20180503 아두이노 필기

< 시리얼에 입력한 값을 디스플레이로 출력하기 >

/*
 제목  : 7세그먼트로 숫자 표시하기
 내용  : 7세그먼트를 사용하여 0부터 9까지 숫자를 표시해 봅시다. 
 */

// 7세그먼트는 총 8개의 LED로 구성이 되어 있습니다.
// 공통 애노드(Common Anode) 타입의 7세그먼트는
// 켜고자 하는 LED의 핀에 LOW(0) 값을 보내도록 설정합니다.
// 반대로, 공통 캐소드(Common Cathode) 타입을 사용할 경우, HIGH(1) 값으로 설정합니다.
// 7세그먼트 각각 LED에 핀을 할당합니다. {A, B, C, D, E, F, G, H}
int segmentLEDs[] = {7, 6, 4, 2, 1, 9, 10, 5};
// 지정된 LED 개수
int segmentLEDsNum = 8;

// Commom Anode 
// 각 숫자에 대한 LED 설정 값을 정의합니다.
// 숫자에 매칭되는 LED의 로직레벨을 LOW(0) 상태로 설정합니다.
/* int digitForNum[10][8] = {
 {0, 0, 0, 0, 0, 0, 1, 1}, //0
 {1, 0, 0, 1, 1, 1, 1, 1}, //1
 {0, 0, 1, 0, 0, 1, 0, 1}, //2
 {0, 0, 0, 0, 1, 1, 0, 1}, //3
 {1, 0, 0, 1, 1, 0, 0, 1}, //4
 {0, 1, 0, 0, 1, 0, 0, 1}, //5
 {0, 1, 0, 0, 0, 0, 0, 1}, //6
 {0, 0, 0, 1, 1, 1, 1, 1}, //7
 {0, 0, 0, 0, 0, 0, 0, 1}, //8
 {0, 0, 0, 0, 1, 0, 0, 1}  //9
};
*/

// Commom Cathode
int digitForNum[10][8] = {
 {1, 1, 1, 1, 1, 1, 0, 0}, //0
 {0, 1, 1, 0, 0, 0, 0, 0}, //1
 {1, 1, 0, 1, 1, 0, 1, 0}, //2
 {1, 1, 1, 1, 0, 0, 1, 0}, //3
 {0, 1, 1, 0, 0, 1, 1, 0}, //4
 {1, 0, 1, 1, 0, 1, 1, 0}, //5
 {1, 0, 1, 1, 1, 1, 1, 0}, //6
 {1, 1, 1, 0, 0, 0, 0, 0}, //7
 {1, 1, 1, 1, 1, 1, 1, 0}, //8
 {1, 1, 1, 1, 0, 1, 1, 0}  //9
};
// 실행시 가장 먼저 호출되는 함수이며, 최초 1회만 실행됩니다.
// 변수를 선언하거나 초기화를 위한 코드를 포함합니다.
void setup() {
  Serial.begin(9600);
 // 7세그먼트 각각 LED에 연결된 핀을 OUTPUT으로 설정합니다.
 for (int i = 0 ; i < segmentLEDsNum ; i++) {
  pinMode(segmentLEDs[i], OUTPUT);
 }
}

// setup() 함수가 호출된 이후, loop() 함수가 호출되며,
// 블록 안의 코드를 무한히 반복 실행됩니다.
void loop() {
    long value1=0;
    
    if(Serial.available()){
       value1 = Serial.parseInt();

      Serial.print("value1: ");
      Serial.println(value1);
    
  // 각 숫자에 대한 각각 LED의 로직레벨을 설정합니다.
    for (int j = 0 ; j < segmentLEDsNum ; j++) {
     digitalWrite(segmentLEDs[j], digitForNum[value1][j]);
    }
   
  // 1초 동안 대기합니다.
  delay(1000);
    }
} 
