#include <Wire.h>
#include <RFduinoBLE.h>
#include "pitches.h" 
#include "PlayMelody.h" 
#define MAX 50
// 온도값을 PC 모니터에 표시하기 
const int temperaturePin = 2;  //  온도 핀이 연결된 핀을 2번으로 설정  
int button1=3;//button1 3번핀
int button2=4;//button2 4번핀
int buttonStatement1=0;
int buttonStatement2=0;
int speakerPin = 5;//스피커핀 5번핀
int led=6;//led 6번핀
int state_mode = 0;
int numTones = 8;
unsigned int tones[] = {262, 294, 330, 349, 392, 440, 494, 523};


char serialCmdData[MAX];//serial input buffer
String inData;

char *help[]={"help","1","2","3"};

void ex_help_command()
{
  for(int i=0; i<sizeof(help)/sizeof(char *);i++)
    Serial.println(help[i]);
}


int cmd_interpret(char *cmd)
{
     for(int i=0; i< (sizeof(help)/sizeof( char *)); i++)
     {
         if(!strcmp(help[i], cmd))
             return i;
     }
     return 0;
}
// 멜로디를 위한 음표들:
unsigned int melody[] = {
   NOTE_G4, NOTE_G4, NOTE_A4, NOTE_A4, NOTE_G4, NOTE_G4, NOTE_E4,
   NOTE_G4, NOTE_G4, NOTE_E4, NOTE_E4, NOTE_D4, 0
};

// 음표 길이들 : 4 = 4분(1/4) 음표, 8 = 8분(1/8) 음표, 
unsigned int noteDurations[] = {
   4, 4, 4, 4, 4, 4, 2,
   4, 4, 4, 4, 2, 2
};

void play_school_bell(void)
{ 
  int noteDuration = 0, thisNote = 0, pauseBetweenNotes = 0;
  for (thisNote = 0; thisNote < sizeof(noteDurations) / sizeof(int); thisNote++) {

    // 음표 길이를 계산하기 위하여, 1초를 음표 타입으로 나눕니다. 
    // 예를 들어, 4분 음표 = 1000 / 4,  8분 음표 = 1000/8 등과 같이
    // 합니다.
    noteDuration = 1000 / noteDurations[thisNote];
    tone(speakerPin, melody[thisNote]);
    delay(noteDuration);

    // 음표들을 구분하기 위하여, 음표 사이에 최소한의 지연 시간을
    // 음표 길이 + 30%가 잘 동작하는 것 같습니다:
    noTone(speakerPin);
    pauseBetweenNotes = noteDuration * 1.30;
    delay(pauseBetweenNotes);
  }
     // 음 발생하는 것을 멈춤니다:
     noTone(speakerPin);
}

int    play_and_state_change(long input)
{
 
  switch(input){
    case '1':
      state_mode=1;
      int reading = analogRead(temperaturePin);    // 아날로그 입력 온도값을 읽음  
      Serial.print(((3.0*reading/1024.0))*100);           // LM35 온도 계산법 =             
                                                             // 온도 = (3.0*reading*100.0)/1024.0
      Serial.println("c");     // 컴퓨터에 “C” 문장을 시리얼 통신으로 보냄                    
      delay(1000);           // 시리얼 포터의 버퍼를 방지하기 위함 
      
      break;
      
    case '2':
       state_mode=2;
       play_school_bell();
      break;
      
    case '3':
      state_mode=3;
      digitalWrite(6,HIGH);
      delay(100);
      digitalWrite(6,LOW);
      delay(100);
      
      break;
    
      default: Serial.println("State Error");
  }
  delay(10);
  
}
void setup()
{
  pinMode(temperaturePin, INPUT);   //  온도 핀을 입력으로 설정
  pinMode(button1,INPUT);
  pinMode(button2,INPUT);
  pinMode(speakerPin,OUTPUT);
  pinMode(led,OUTPUT);
  Serial.begin(9600);  // 시리얼 데이터를 주고받을 수 있게 준비함 
 // attachPinInterrupt()
  }                            // 속도=9600(bps)

void loop()
{
  long input;//문자가 전송되면
  input = cmd_interpret(serialCmdData);

  play_and_state_change(input);

 
  }
